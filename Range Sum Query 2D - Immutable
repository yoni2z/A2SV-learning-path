class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        self.rows = len(matrix)
        self.cols = len(matrix[0])
        self.sumReg = []

        for _ in range(self.rows + 1):
            self.sumReg.append([0] * (self.cols + 1))

        for i in range(1, self.rows + 1):
            for j in range(1, self.cols + 1):
                self.sumReg[i][j] = matrix[i - 1][j - 1] + self.sumReg[i][j - 1] + self.sumReg[i - 1][j] - self.sumReg[i - 1][j - 1]

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        return self.sumReg[row2 + 1][col2 + 1] - self.sumReg[row1][col2 + 1] - self.sumReg[row2 + 1][col1] + self.sumReg[row1][col1]
        


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
